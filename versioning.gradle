ext {
    /**
     * @see "http://stackoverflow.com/a/33782511/3212712"
     *
     * Builds an Android version code from the version of the project.
     */
    buildVersionCode = {
        def (major, minor, patch, build) = version.toLowerCase().replaceAll('-', '').tokenize('.')

        (major, minor, patch, build) = [major, minor, patch, build].collect { it.toInteger() }

        (major * 1000000) + (minor * 10000) + (patch * 100) + build
    }

    buildVersionCodeFor3Numbers = {
        def (major, minor, patch) = version.toLowerCase().replaceAll('-', '').tokenize('.')

        (major, minor, patch) = [major, minor, patch].collect { it.toInteger() }

        (major * 10000) + (minor * 100) + patch
    }

    buildVersionCodeFromVariant = { variant ->
        def version = getVersionValueAsString(variant)

        println('buildVersionCodeFromVariant: ' + version)

        def (major, minor, patch, build) = version.toLowerCase().replaceAll('-', '').tokenize('.')

        (major, minor, patch, build) = [major, minor, patch, build].collect { it.toInteger() }

        (major * 1000000) + (minor * 10000) + (patch * 100) + build
    }

    getVersionValueAsString = { variant ->
        def pathToFileWithData = "config/" + variant.productFlavors[0].name + "/version.properties"

        println('pathToFileWithData: ' + pathToFileWithData)

        def marketSkusPropertiesFile = rootProject.file(pathToFileWithData)
        def properties = new Properties()
        properties.load(new FileInputStream(marketSkusPropertiesFile))

        def version = properties.get("version")
        return version
    }
}