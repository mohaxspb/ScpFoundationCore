ext {
    fillApiArrays = { variant, fileIsInRoot ->
        logger.info("fillApiArrays: {}", variant.productFlavors[0].name)
        def pathToFileWithData
        if (fileIsInRoot) {
//            logger.lifecycle('fileIsInRoot: {}', fileIsInRoot)
            pathToFileWithData = "apiKeys.properties"
        } else {
//            logger.lifecycle('variant.productFlavors[0].name: {}', variant.productFlavors[0].name)
            pathToFileWithData = "config/" + variant.productFlavors[0].name + "/apiKeys.properties"
        }

        fillData(variant, pathToFileWithData)
    }

    fillData = { variant, pathToFileWithData ->
        //add market skus to buildConfig
        //there is a way to store it in res... but it's awful
        //http://stackoverflow.com/a/41655569/3212712
        //Load market SKUs
        if (rootProject.file(pathToFileWithData).exists()) {
            def marketSkusPropertiesFile = rootProject.file(pathToFileWithData)
            def properties = new Properties()
            properties.load(new FileInputStream(marketSkusPropertiesFile))

            variant.resValue('string', 'yandex_metrica_api_key', properties.get("yandexMetricaApiKey"))

            //ads
            variant.resValue('string', 'ads_app_id', properties.get("adMobAppId"))

            variant.resValue('string', 'ad_unit_id_interstitial', properties.get("adsBannerIdInterstitial"))

            variant.resValue('string', 'ad_unit_id_gallery_banner', properties.get("adsBannerIdGallery"))

            variant.resValue('string', 'ad_unit_id_article_screen_banner', properties.get("adsBannerIdArticleScreen"))

            variant.resValue('string', 'ad_unit_id_main_screen_banner', properties.get("adsBannerIdMainScreen"))

            variant.resValue('string', 'appodeal_app_key', properties.get("appodealAppKey"))
            //ads END

            variant.resValue('integer', 'com_vk_sdk_AppId', properties.get("vkSdkAppId"))

            //use string, as so in facebook docs...
            variant.resValue('string', 'facebook_app_id', properties.get("facebookAppId"))

            variant.resValue('string', 'firebase_db_url', properties.get("firebaseUri"))

            variant.resValue('string', 'firebase_deep_link', properties.get("firebaseDeepLink"))

            //our APIs data
            variant.resValue('string', 'tools_api_url', properties.get("vpsApiAddress"))
            variant.buildConfigField('String', 'TOOLS_API_URL', '"' + properties.get("vpsApiAddress") + '"')

            variant.resValue('string', 'scp_reader_api_url', properties.get("scpReaderApiAddress"))
            variant.buildConfigField('String', 'SCP_READER_API_URL', '"' + properties.get("scpReaderApiAddress") + '"')

            variant.buildConfigField('String', 'SCP_READER_API_CLIENT_ID', '"' + properties.get("scpReaderApiClientId") + '"')
            variant.buildConfigField('String', 'SCP_READER_API_CLIENT_SECRET', '"' + properties.get("scpReaderApiClientSecret") + '"')
            //our APIs data END

            variant.resValue('string', 'web_application_id', properties.get("webApplicationId"))

            variant.resValue('integer', 'realm_version', properties.get("realmVersion"))

            variant.resValue('bool', 'filter_by_type_enabled', properties.get("filterByTypeEnabled"))

            variant.resValue('bool', 'social_login_vk_enabled', properties.get("socialLoginVkEnabled"))

            variant.resValue('bool', 'multiTagSearchEnabled', properties.get("multiTagSearchEnabled"))

            variant.resValue('bool', 'siteHasRatedArticlesList', properties.get("siteHasRatedArticlesList"))
        } else {
/*
            logger.lifecycle('pathToFileWithData: {}', pathToFileWithData)
            throw new GradleException("You need to have apiKeys.properties file in projectRoot/config/{FLAVOR_NAME} with " +
                    "yandexMetricaApiKey," +
                    "adMobAppId," +
                    "adsBannerIdInterstitial," +
                    "vkSdkAppId," +
                    "firebaseUri," +
                    "vpsApiAddress" +
                    "webApplicationId" +
                    "vpsApiAddress" +
                    " etc variables to build project")
        */
        }

    }
}